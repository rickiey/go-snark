syntax = "proto3"; //指定proto版本

package windowpost;

option go_package =".;windowpost";

// 注册window worker
message WindowWorkerRequest{  // 定义请求信息
    string WorkerAddr = 1;
}
message WindowWorkerResponse{  // 定义响应信息
    int32 Status = 1;
}

service WindowGrpc{
    rpc RegisterWorker(WindowWorkerRequest) returns(WindowWorkerResponse);
    rpc AllocateTask(TaskRequest) returns(TaskResponse);
    rpc HeartBeat(HeartBeatRequest) returns(HeartBeatResponse);
}

// 分配计算任务
message TaskRequest {
    uint64 MinerID = 1;
    bytes Privsectors = 2;
	bytes Random = 3;
}

message PoStProof {
    int64 PoStProof = 1;
    bytes ProofBytes = 2;
}

message TaskResponse {
    string Status = 1;
    repeated uint64 SectorNumber = 2;
    repeated PoStProof Proofs = 3;
}

// 心跳
message HeartBeatRequest {
    uint64 SentTime = 1;
}

message HeartBeatResponse {
    string Status = 1;
    uint64 RecvTime = 2;
}




